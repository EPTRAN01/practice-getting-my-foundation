import random

class Parent:
    def __init__(self, gene1, gene2):
        self.gene1 = gene1.lower()
        self.gene2 = gene2.lower()

class Child:
    def __init__(self, parent1, parent2):
        self.gene1 = random.choice([parent1.gene1, parent1.gene2]) #using the random import
        self.gene2 = random.choice([parent2.gene1, parent2.gene2])
        self.eye_color = self.determine_eye_color()

    def determine_eye_color(self): #this returns the results so even if there is one brown in there it gets brown back

            if "brown" in [self.gene1, self.gene2]:
                return "Brown"
            else:
                return "Blue"


def input_user():
    p1_gene1 = input("Please enter gene 1 of parent 1: ")
    p1_gene2 = input("Please enter gene 2 of parent 1: ")


    p2_gene1 = input("Please enter gene 1 of parent 2: ")
    p2_gene2 = input("Please enter gene 2 of parent 2: ")


    p1 = Parent(p1_gene1, p1_gene2) #objects i made
    p2 = Parent(p2_gene1, p2_gene2)
    return p1, p2




def outcome(p1, p2, c):
    print("Parent 1 genes:", p1.gene1, p1.gene2)
    print("Parent 2 genes:", p2.gene1, p2.gene2)
    print("Child gene 1:", c.gene1)
    print("Child gene 2:", c.gene2)
    print("Child eye color:", c.eye_color)


if __name__ == '__main__': #this takes the made classes and objects and just plugs it in making it more condense
    p1, p2 = input_user()
    c = Child(p1, p2)
    outcome(p1, p2, c)
